=begin
#Mooncard API

#Access Mooncard data from anywhere

OpenAPI spec version: 3.0.0
Contact: hello@mooncard.co
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ExpenseCategoriesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ExpenseCategoriesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ExpenseCategoriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ExpenseCategoriesApi' do
    it 'should create an instance of ExpenseCategoriesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ExpenseCategoriesApi)
    end
  end

  # unit tests for delete_api_v3_expense_categories_id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_api_v3_expense_categories_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_v3_expense_categories
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @option opts [String] :expense_category_search_name_cont name LIKE %?%
  # @option opts [String] :expense_category_search_expense_category_template_equals expense_category_template &#x3D; ?
  # @option opts [String] :expense_category_search_charge_account_equals charge_account &#x3D; ?
  # @option opts [String] :expense_category_search_order_by Select which field you want to order the results by
  # @option opts [String] :expense_category_search_order Select whether the results should be sorted in ascending or descending order
  # @return [Array<ExpenseCategory>]
  describe 'get_api_v3_expense_categories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_v3_expense_categories_id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [ExpenseCategory]
  describe 'get_api_v3_expense_categories_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_api_v3_expense_categories
  # @param expense_category 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_api_v3_expense_categories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_api_v3_expense_categories_id
  # @param id 
  # @param expense_category_body 
  # @param [Hash] opts the optional parameters
  # @return [ExpenseCategory]
  describe 'put_api_v3_expense_categories_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
