=begin
#Mooncard API

#Access Mooncard data from anywhere

OpenAPI spec version: 3.0.0
Contact: hello@mooncard.co
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Mooncard::PutApiV3ExpenseCategoriesExpenseCategory
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PutApiV3ExpenseCategoriesExpenseCategory' do
  before do
    # run before each test
    @instance = Mooncard::PutApiV3ExpenseCategoriesExpenseCategory.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PutApiV3ExpenseCategoriesExpenseCategory' do
    it 'should create an instance of PutApiV3ExpenseCategoriesExpenseCategory' do
      expect(@instance).to be_instance_of(Mooncard::PutApiV3ExpenseCategoriesExpenseCategory)
    end
  end
  describe 'test attribute "analytic_codes"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "asset_accounting"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "business_codes"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "charge_account"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "deductible_vat"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "description"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "expense_category_template"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["template_legal", "template_stamps", "template_transport", "template_office_supplies", "template_cleaning_supplies", "template_books", "template_forums", "template_gifts", "template_small_equipments", "template_expensive_equipments", "template_cash", "template_internet_subscriptions", "template_internet_ads", "template_software", "template_hotels", "template_rent", "template_internal_meals", "template_food", "template_external_meals", "template_car_rental", "template_fuel", "template_parking", "template_toll", "template_taxi", "template_train", "template_flight", "template_vehicle_repairs", "template_km_expenses", "template_personal_expenses"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.expense_category_template = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "expense_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["professional_expense", "personal_expense"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.expense_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "goods_or_services"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["goods", "services"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.goods_or_services = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "group"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "guests"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "no_receipts"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "rebilling"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "supplier_account"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "archived_at"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
